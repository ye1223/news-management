{"ast":null,"code":"import { getRangeValue, getValue, itemFromSingleOrMultiple, loadParticlesOptions, randomInRange, setRangeValue } from \"tsparticles-engine\";\nimport { Destroy } from \"./Options/Classes/Destroy\";\nexport class DestroyUpdater {\n  constructor(engine, container) {\n    this.engine = engine;\n    this.container = container;\n  }\n  init(particle) {\n    const container = this.container,\n      particlesOptions = particle.options,\n      destroyOptions = particlesOptions.destroy;\n    if (!destroyOptions) {\n      return;\n    }\n    particle.splitCount = 0;\n    const destroyBounds = destroyOptions.bounds;\n    if (!particle.destroyBounds) {\n      particle.destroyBounds = {};\n    }\n    if (destroyBounds.bottom) {\n      particle.destroyBounds.bottom = getRangeValue(destroyBounds.bottom) * container.canvas.size.height / 100;\n    }\n    if (destroyBounds.left) {\n      particle.destroyBounds.left = getRangeValue(destroyBounds.left) * container.canvas.size.width / 100;\n    }\n    if (destroyBounds.right) {\n      particle.destroyBounds.right = getRangeValue(destroyBounds.right) * container.canvas.size.width / 100;\n    }\n    if (destroyBounds.top) {\n      particle.destroyBounds.top = getRangeValue(destroyBounds.top) * container.canvas.size.height / 100;\n    }\n  }\n  isEnabled(particle) {\n    return !particle.destroyed;\n  }\n  loadOptions(options, ...sources) {\n    if (!options.destroy) {\n      options.destroy = new Destroy();\n    }\n    for (const source of sources) {\n      options.destroy.load(source === null || source === void 0 ? void 0 : source.destroy);\n    }\n  }\n  particleDestroyed(particle, override) {\n    if (override) {\n      return;\n    }\n    const destroyOptions = particle.options.destroy;\n    if (destroyOptions && destroyOptions.mode === \"split\") {\n      this.split(particle);\n    }\n  }\n  update(particle) {\n    if (!this.isEnabled(particle)) {\n      return;\n    }\n    const position = particle.getPosition(),\n      bounds = particle.destroyBounds;\n    if (!bounds) {\n      return;\n    }\n    if (bounds.bottom !== undefined && position.y >= bounds.bottom || bounds.left !== undefined && position.x <= bounds.left || bounds.right !== undefined && position.x >= bounds.right || bounds.top !== undefined && position.y <= bounds.top) {\n      particle.destroy();\n    }\n  }\n  addSplitParticle(parent, splitParticlesOptions) {\n    var _a, _b, _c;\n    const destroyOptions = parent.options.destroy;\n    if (!destroyOptions) {\n      return;\n    }\n    const splitOptions = destroyOptions.split,\n      options = loadParticlesOptions(this.engine, this.container, parent.options),\n      factor = getValue(splitOptions.factor),\n      parentColor = parent.getFillColor();\n    if (splitOptions.color) {\n      options.color.load(splitOptions.color);\n    } else if (splitOptions.colorOffset && parentColor) {\n      options.color.load({\n        value: {\n          hsl: {\n            h: parentColor.h + getRangeValue((_a = splitOptions.colorOffset.h) !== null && _a !== void 0 ? _a : 0),\n            s: parentColor.s + getRangeValue((_b = splitOptions.colorOffset.s) !== null && _b !== void 0 ? _b : 0),\n            l: parentColor.l + getRangeValue((_c = splitOptions.colorOffset.l) !== null && _c !== void 0 ? _c : 0)\n          }\n        }\n      });\n    } else {\n      options.color.load({\n        value: {\n          hsl: parent.getFillColor()\n        }\n      });\n    }\n    options.move.load({\n      center: {\n        x: parent.position.x,\n        y: parent.position.y,\n        mode: \"precise\"\n      }\n    });\n    if (typeof options.size.value === \"number\") {\n      options.size.value /= factor;\n    } else {\n      options.size.value.min /= factor;\n      options.size.value.max /= factor;\n    }\n    options.load(splitParticlesOptions);\n    const offset = splitOptions.sizeOffset ? setRangeValue(-parent.size.value, parent.size.value) : 0,\n      position = {\n        x: parent.position.x + randomInRange(offset),\n        y: parent.position.y + randomInRange(offset)\n      };\n    return this.container.particles.addParticle(position, options, parent.group, particle => {\n      var _a;\n      if (particle.size.value < 0.5) {\n        return false;\n      }\n      particle.velocity.length = randomInRange(setRangeValue(parent.velocity.length, particle.velocity.length));\n      particle.splitCount = ((_a = parent.splitCount) !== null && _a !== void 0 ? _a : 0) + 1;\n      particle.unbreakable = true;\n      setTimeout(() => {\n        particle.unbreakable = false;\n      }, 500);\n      return true;\n    });\n  }\n  split(particle) {\n    const destroyOptions = particle.options.destroy;\n    if (!destroyOptions) {\n      return;\n    }\n    const splitOptions = destroyOptions.split;\n    if (splitOptions.count >= 0 && (particle.splitCount === undefined || particle.splitCount++ > splitOptions.count)) {\n      return;\n    }\n    const rate = getValue(splitOptions.rate),\n      particlesSplitOptions = itemFromSingleOrMultiple(splitOptions.particles);\n    for (let i = 0; i < rate; i++) {\n      this.addSplitParticle(particle, particlesSplitOptions);\n    }\n  }\n}","map":{"version":3,"names":["getRangeValue","getValue","itemFromSingleOrMultiple","loadParticlesOptions","randomInRange","setRangeValue","Destroy","DestroyUpdater","constructor","engine","container","init","particle","particlesOptions","options","destroyOptions","destroy","splitCount","destroyBounds","bounds","bottom","canvas","size","height","left","width","right","top","isEnabled","destroyed","loadOptions","sources","source","load","particleDestroyed","override","mode","split","update","position","getPosition","undefined","y","x","addSplitParticle","parent","splitParticlesOptions","_a","_b","_c","splitOptions","factor","parentColor","getFillColor","color","colorOffset","value","hsl","h","s","l","move","center","min","max","offset","sizeOffset","particles","addParticle","group","velocity","length","unbreakable","setTimeout","count","rate","particlesSplitOptions","i"],"sources":["/Users/liuye/Desktop/dev/news-publishing/admin/node_modules/tsparticles-updater-destroy/esm/DestroyUpdater.js"],"sourcesContent":["import { getRangeValue, getValue, itemFromSingleOrMultiple, loadParticlesOptions, randomInRange, setRangeValue, } from \"tsparticles-engine\";\nimport { Destroy } from \"./Options/Classes/Destroy\";\nexport class DestroyUpdater {\n    constructor(engine, container) {\n        this.engine = engine;\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, destroyOptions = particlesOptions.destroy;\n        if (!destroyOptions) {\n            return;\n        }\n        particle.splitCount = 0;\n        const destroyBounds = destroyOptions.bounds;\n        if (!particle.destroyBounds) {\n            particle.destroyBounds = {};\n        }\n        if (destroyBounds.bottom) {\n            particle.destroyBounds.bottom = (getRangeValue(destroyBounds.bottom) * container.canvas.size.height) / 100;\n        }\n        if (destroyBounds.left) {\n            particle.destroyBounds.left = (getRangeValue(destroyBounds.left) * container.canvas.size.width) / 100;\n        }\n        if (destroyBounds.right) {\n            particle.destroyBounds.right = (getRangeValue(destroyBounds.right) * container.canvas.size.width) / 100;\n        }\n        if (destroyBounds.top) {\n            particle.destroyBounds.top = (getRangeValue(destroyBounds.top) * container.canvas.size.height) / 100;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.destroy) {\n            options.destroy = new Destroy();\n        }\n        for (const source of sources) {\n            options.destroy.load(source === null || source === void 0 ? void 0 : source.destroy);\n        }\n    }\n    particleDestroyed(particle, override) {\n        if (override) {\n            return;\n        }\n        const destroyOptions = particle.options.destroy;\n        if (destroyOptions && destroyOptions.mode === \"split\") {\n            this.split(particle);\n        }\n    }\n    update(particle) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        const position = particle.getPosition(), bounds = particle.destroyBounds;\n        if (!bounds) {\n            return;\n        }\n        if ((bounds.bottom !== undefined && position.y >= bounds.bottom) ||\n            (bounds.left !== undefined && position.x <= bounds.left) ||\n            (bounds.right !== undefined && position.x >= bounds.right) ||\n            (bounds.top !== undefined && position.y <= bounds.top)) {\n            particle.destroy();\n        }\n    }\n    addSplitParticle(parent, splitParticlesOptions) {\n        var _a, _b, _c;\n        const destroyOptions = parent.options.destroy;\n        if (!destroyOptions) {\n            return;\n        }\n        const splitOptions = destroyOptions.split, options = loadParticlesOptions(this.engine, this.container, parent.options), factor = getValue(splitOptions.factor), parentColor = parent.getFillColor();\n        if (splitOptions.color) {\n            options.color.load(splitOptions.color);\n        }\n        else if (splitOptions.colorOffset && parentColor) {\n            options.color.load({\n                value: {\n                    hsl: {\n                        h: parentColor.h + getRangeValue((_a = splitOptions.colorOffset.h) !== null && _a !== void 0 ? _a : 0),\n                        s: parentColor.s + getRangeValue((_b = splitOptions.colorOffset.s) !== null && _b !== void 0 ? _b : 0),\n                        l: parentColor.l + getRangeValue((_c = splitOptions.colorOffset.l) !== null && _c !== void 0 ? _c : 0),\n                    },\n                },\n            });\n        }\n        else {\n            options.color.load({\n                value: {\n                    hsl: parent.getFillColor(),\n                },\n            });\n        }\n        options.move.load({\n            center: {\n                x: parent.position.x,\n                y: parent.position.y,\n                mode: \"precise\",\n            },\n        });\n        if (typeof options.size.value === \"number\") {\n            options.size.value /= factor;\n        }\n        else {\n            options.size.value.min /= factor;\n            options.size.value.max /= factor;\n        }\n        options.load(splitParticlesOptions);\n        const offset = splitOptions.sizeOffset ? setRangeValue(-parent.size.value, parent.size.value) : 0, position = {\n            x: parent.position.x + randomInRange(offset),\n            y: parent.position.y + randomInRange(offset),\n        };\n        return this.container.particles.addParticle(position, options, parent.group, (particle) => {\n            var _a;\n            if (particle.size.value < 0.5) {\n                return false;\n            }\n            particle.velocity.length = randomInRange(setRangeValue(parent.velocity.length, particle.velocity.length));\n            particle.splitCount = ((_a = parent.splitCount) !== null && _a !== void 0 ? _a : 0) + 1;\n            particle.unbreakable = true;\n            setTimeout(() => {\n                particle.unbreakable = false;\n            }, 500);\n            return true;\n        });\n    }\n    split(particle) {\n        const destroyOptions = particle.options.destroy;\n        if (!destroyOptions) {\n            return;\n        }\n        const splitOptions = destroyOptions.split;\n        if (splitOptions.count >= 0 &&\n            (particle.splitCount === undefined || particle.splitCount++ > splitOptions.count)) {\n            return;\n        }\n        const rate = getValue(splitOptions.rate), particlesSplitOptions = itemFromSingleOrMultiple(splitOptions.particles);\n        for (let i = 0; i < rate; i++) {\n            this.addSplitParticle(particle, particlesSplitOptions);\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}