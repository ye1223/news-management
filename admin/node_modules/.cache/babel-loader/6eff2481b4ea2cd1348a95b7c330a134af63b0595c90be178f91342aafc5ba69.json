{"ast":null,"code":"import { EventDispatcher } from \"./Utils/EventDispatcher\";\nimport { Loader } from \"./Core/Loader\";\nimport { Plugins } from \"./Core/Utils/Plugins\";\nexport class Engine {\n  constructor() {\n    this._domArray = [];\n    this._eventDispatcher = new EventDispatcher();\n    this._initialized = false;\n    this._loader = new Loader(this);\n    this.plugins = new Plugins(this);\n  }\n  get version() {\n    return \"2.9.3\";\n  }\n  addEventListener(type, listener) {\n    this._eventDispatcher.addEventListener(type, listener);\n  }\n  async addInteractor(name, interactorInitializer) {\n    this.plugins.addInteractor(name, interactorInitializer);\n    await this.refresh();\n  }\n  async addMover(name, moverInitializer) {\n    this.plugins.addParticleMover(name, moverInitializer);\n    await this.refresh();\n  }\n  async addParticleUpdater(name, updaterInitializer) {\n    this.plugins.addParticleUpdater(name, updaterInitializer);\n    await this.refresh();\n  }\n  async addPathGenerator(name, generator) {\n    this.plugins.addPathGenerator(name, generator);\n    await this.refresh();\n  }\n  async addPlugin(plugin) {\n    this.plugins.addPlugin(plugin);\n    await this.refresh();\n  }\n  async addPreset(preset, options, override = false) {\n    this.plugins.addPreset(preset, options, override);\n    await this.refresh();\n  }\n  async addShape(shape, drawer, init, afterEffect, destroy) {\n    let customDrawer;\n    if (typeof drawer === \"function\") {\n      customDrawer = {\n        afterEffect: afterEffect,\n        destroy: destroy,\n        draw: drawer,\n        init: init\n      };\n    } else {\n      customDrawer = drawer;\n    }\n    this.plugins.addShapeDrawer(shape, customDrawer);\n    await this.refresh();\n  }\n  dispatchEvent(type, args) {\n    this._eventDispatcher.dispatchEvent(type, args);\n  }\n  dom() {\n    return this._domArray;\n  }\n  domItem(index) {\n    const dom = this.dom(),\n      item = dom[index];\n    if (item && !item.destroyed) {\n      return item;\n    }\n    dom.splice(index, 1);\n  }\n  init() {\n    if (!this._initialized) {\n      this._initialized = true;\n    }\n  }\n  async load(tagId, options) {\n    return this._loader.load(tagId, options);\n  }\n  async loadFromArray(tagId, options, index) {\n    return this._loader.load(tagId, options, index);\n  }\n  async loadJSON(tagId, pathConfigJson, index) {\n    return this._loader.loadJSON(tagId, pathConfigJson, index);\n  }\n  async refresh() {\n    for (const instance of this.dom()) {\n      await instance.refresh();\n    }\n  }\n  removeEventListener(type, listener) {\n    this._eventDispatcher.removeEventListener(type, listener);\n  }\n  async set(id, element, options) {\n    return this._loader.set(id, element, options);\n  }\n  async setJSON(id, element, pathConfigJson, index) {\n    return this._loader.setJSON(id, element, pathConfigJson, index);\n  }\n  setOnClickHandler(callback) {\n    const dom = this.dom();\n    if (!dom.length) {\n      throw new Error(\"Can only set click handlers after calling tsParticles.load() or tsParticles.loadJSON()\");\n    }\n    for (const domItem of dom) {\n      domItem.addClickHandler(callback);\n    }\n  }\n}","map":{"version":3,"names":["EventDispatcher","Loader","Plugins","Engine","constructor","_domArray","_eventDispatcher","_initialized","_loader","plugins","version","addEventListener","type","listener","addInteractor","name","interactorInitializer","refresh","addMover","moverInitializer","addParticleMover","addParticleUpdater","updaterInitializer","addPathGenerator","generator","addPlugin","plugin","addPreset","preset","options","override","addShape","shape","drawer","init","afterEffect","destroy","customDrawer","draw","addShapeDrawer","dispatchEvent","args","dom","domItem","index","item","destroyed","splice","load","tagId","loadFromArray","loadJSON","pathConfigJson","instance","removeEventListener","set","id","element","setJSON","setOnClickHandler","callback","length","Error","addClickHandler"],"sources":["/Users/liuye/Desktop/dev/news-publishing/admin/node_modules/tsparticles-engine/esm/engine.js"],"sourcesContent":["import { EventDispatcher } from \"./Utils/EventDispatcher\";\nimport { Loader } from \"./Core/Loader\";\nimport { Plugins } from \"./Core/Utils/Plugins\";\nexport class Engine {\n    constructor() {\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this._loader = new Loader(this);\n        this.plugins = new Plugins(this);\n    }\n    get version() {\n        return \"2.9.3\";\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer) {\n        this.plugins.addInteractor(name, interactorInitializer);\n        await this.refresh();\n    }\n    async addMover(name, moverInitializer) {\n        this.plugins.addParticleMover(name, moverInitializer);\n        await this.refresh();\n    }\n    async addParticleUpdater(name, updaterInitializer) {\n        this.plugins.addParticleUpdater(name, updaterInitializer);\n        await this.refresh();\n    }\n    async addPathGenerator(name, generator) {\n        this.plugins.addPathGenerator(name, generator);\n        await this.refresh();\n    }\n    async addPlugin(plugin) {\n        this.plugins.addPlugin(plugin);\n        await this.refresh();\n    }\n    async addPreset(preset, options, override = false) {\n        this.plugins.addPreset(preset, options, override);\n        await this.refresh();\n    }\n    async addShape(shape, drawer, init, afterEffect, destroy) {\n        let customDrawer;\n        if (typeof drawer === \"function\") {\n            customDrawer = {\n                afterEffect: afterEffect,\n                destroy: destroy,\n                draw: drawer,\n                init: init,\n            };\n        }\n        else {\n            customDrawer = drawer;\n        }\n        this.plugins.addShapeDrawer(shape, customDrawer);\n        await this.refresh();\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this._domArray;\n    }\n    domItem(index) {\n        const dom = this.dom(), item = dom[index];\n        if (item && !item.destroyed) {\n            return item;\n        }\n        dom.splice(index, 1);\n    }\n    init() {\n        if (!this._initialized) {\n            this._initialized = true;\n        }\n    }\n    async load(tagId, options) {\n        return this._loader.load(tagId, options);\n    }\n    async loadFromArray(tagId, options, index) {\n        return this._loader.load(tagId, options, index);\n    }\n    async loadJSON(tagId, pathConfigJson, index) {\n        return this._loader.loadJSON(tagId, pathConfigJson, index);\n    }\n    async refresh() {\n        for (const instance of this.dom()) {\n            await instance.refresh();\n        }\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    async set(id, element, options) {\n        return this._loader.set(id, element, options);\n    }\n    async setJSON(id, element, pathConfigJson, index) {\n        return this._loader.setJSON(id, element, pathConfigJson, index);\n    }\n    setOnClickHandler(callback) {\n        const dom = this.dom();\n        if (!dom.length) {\n            throw new Error(\"Can only set click handlers after calling tsParticles.load() or tsParticles.loadJSON()\");\n        }\n        for (const domItem of dom) {\n            domItem.addClickHandler(callback);\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}